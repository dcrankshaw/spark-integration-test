<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>edu.berkeley.veloxms</groupId>
  <artifactId>velox-parent</artifactId>
  <version>0.0.1-SNAPSHOT</version>

  <name>Spark remote app</name>
  <url>https://amplab.cs.berkeley.edu/</url>
  <licenses>
    <license>
      <name>Apache 2.0 License</name>
      <url>http://www.apache.org/licenses/LICENSE-2.0.html</url>
      <distribution>repo</distribution>
    </license>
  </licenses>
  <developers>
    <developer>
      <id>crankshaw</id>
      <name>Dan Crankshaw</name>
      <email>crankshaw@cs.berkeley.edu</email>
      <url>http://www.github.com/dcrankshaw</url>
    </developer>
  </developers>

  <prerequisites>
    <maven>3.0.4</maven>
  </prerequisites>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
    <java.version>1.7</java.version>
    <scala.version>2.10.4</scala.version>
    <spark.version>1.3.0</spark.version>
    <scala.binary.version>2.10</scala.binary.version>
    <scala.macros.version>2.0.1</scala.macros.version>
    <chill.version>0.3.6</chill.version>
    <dropwizard.version>0.7.1</dropwizard.version>
    <!-- jackson version needed for jackson-scala module, should be tied to dropwizards jackson version -->
    <!-- <jackson.version>2.5.1</jackson.version> -->
    <jackson.version>2.4.4</jackson.version>
    <tachyon.version>0.6.0-SNAPSHOT</tachyon.version>
    <PermGen>64m</PermGen>
    <MaxPermGen>512m</MaxPermGen>
  </properties>

  <repositories>
    <repository>
      <id>central</id>
      <!-- This should be at top, it makes maven try the central repo first and then others and hence faster dep resolution -->
      <name>Maven Repository</name>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>apache-repo</id>
      <name>Apache Repository</name>
      <url>https://repository.apache.org/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>jboss-repo</id>
      <name>JBoss Repository</name>
      <url>https://repository.jboss.org/nexus/content/repositories/releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>mqtt-repo</id>
      <name>MQTT Repository</name>
      <url>https://repo.eclipse.org/content/repositories/paho-releases</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>cloudera-repo</id>
      <name>Cloudera Repository</name>
      <url>https://repository.cloudera.com/artifactory/cloudera-repos</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>mapr-repo</id>
      <name>MapR Repository</name>
      <url>http://repository.mapr.com/maven</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-releases</id>
      <name>Spring Release Repository</name>
      <url>https://repo.spring.io/libs-release</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <pluginRepositories>
    <pluginRepository>
      <id>central</id>
      <url>https://repo1.maven.org/maven2</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </pluginRepository>
  </pluginRepositories>


  <dependencies>
    <!-- <dependency> -->
      <!--   <groupId>org.apache.spark</groupId> -->
      <!--   <artifactId>spark&#45;mllib_${scala.binary.version}</artifactId> -->
      <!--   <!&#45;&#45; <scope>provided</scope> &#45;&#45;> -->
      <!--   <version>${spark.version}</version> -->
      <!-- </dependency> -->
    <dependency>
      <groupId>io.dropwizard</groupId>
      <artifactId>dropwizard-core</artifactId>
      <version>${dropwizard.version}</version>
    </dependency>
    <dependency>
      <groupId>com.massrelevance</groupId>
      <artifactId>dropwizard-scala_${scala.binary.version}</artifactId>
      <version>0.7.1</version>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>log4j-over-slf4j</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-core</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-databind</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.module</groupId>
          <artifactId>jackson-module-scala_2.10</artifactId>
        </exclusion>
        <exclusion>
          <groupId>com.fasterxml.jackson.core</groupId>
          <artifactId>jackson-annotations</artifactId>
        </exclusion>

      </exclusions>
    </dependency>
    <!-- <dependency> -->
    <!--   <groupId>com.fasterxml.jackson.module</groupId> -->
    <!--   <artifactId>jackson&#45;module&#45;scala_2.10</artifactId> -->
    <!--   <version>${jackson.version}</version> -->
    <!-- </dependency> -->
    <dependency>
      <groupId>com.fasterxml.jackson.module</groupId>
      <artifactId>jackson-module-paranamer</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.spark</groupId>
      <artifactId>spark-core_${scala.binary.version}</artifactId>
      <!-- <artifactId>spark&#45;core</artifactId> -->
      <!-- <scope>provided</scope> -->
      <version>${spark.version}</version>
      <exclusions>
        <!-- <exclusion> -->
        <!--   <groupId>com.fasterxml.jackson.core</groupId> -->
        <!--   <artifactId>jackson&#45;databind</artifactId> -->
        <!-- </exclusion> -->
        <!-- <exclusion> -->
        <!--   <groupId>com.fasterxml.jackson.module</groupId> -->
        <!--   <artifactId>jackson&#45;module&#45;scala_2.10</artifactId> -->
        <!-- </exclusion> -->
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>slf4j-log4j12</artifactId>
          <!-- <groupId>org.slf4j</groupId> -->
          <!-- <artifactId>log4j&#45;over&#45;slf4j</artifactId> -->
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>


  <build>
    <outputDirectory>target/scala-${scala.binary.version}/classes</outputDirectory>
    <testOutputDirectory>target/scala-${scala.binary.version}/test-classes</testOutputDirectory>
    <plugins>
      <plugin>
        <groupId>com.thoughtworks.paranamer</groupId>
        <artifactId>paranamer-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>run</id>  <!-- id is optional -->
            <configuration>
              <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
              <outputDirectory>${project.build.outputDirectory}</outputDirectory>
            </configuration>        
            <goals>
              <goal>generate</goal>
            </goals>
          </execution>
        </executions>
        <dependencies>
          <!-- if some of parameter names you need to retain are held in pre-existing jars, they need to be added to the classpath -->
          <!-- <dependency> -->
          <!--   <groupId>some&#45;artifact&#45;group</groupId> -->
          <!--   <artifactId>some&#45;artifact</artifactId> -->
          <!--   <version>1.0</version> -->
          <!-- </dependency> -->
        </dependencies>
      </plugin>


      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>2.3</version>
        <configuration>
          <relocations>
            <!-- <relocation> -->
            <!--   <pattern>org.eclipse.jetty</pattern> -->
            <!--   <shadedPattern>edu.berkeley.veloxms.jetty</shadedPattern> -->
            <!-- </relocation> -->
          </relocations>
          <createDependencyReducedPom>true</createDependencyReducedPom>
          <!-- <minimizeJar>true</minimizeJar> -->
          <!-- <promoteTransitiveDependencies>true</promoteTransitiveDependencies> -->
          <filters>
            <filter>
              <artifact>*:*</artifact>
              <excludes>
                <exclude>META-INF/*.SF</exclude>
                <exclude>META-INF/*.DSA</exclude>
              </excludes>
            </filter>
          </filters>
        </configuration>
        <executions>
          <execution>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <shadedArtifactId>artifact-shaded</shadedArtifactId>
              <relocations>
                <relocation>
                  <pattern>com.thoughtworks.paranamer</pattern>
                  <shadedPattern>edu.berkeley.velox.paranamer</shadedPattern>
                </relocation>
              </relocations>
              <transformers>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <!-- <mainClass>edu.berkeley.veloxms.VeloxApplication</mainClass> -->
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.AppendingTransformer">
                  <resource>reference.conf</resource>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>net.alchim31.maven</groupId>
        <artifactId>scala-maven-plugin</artifactId>
        <version>3.2.0</version>
        <executions>
          <execution>
            <id>scala-compile-first</id>
            <phase>process-resources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>scala-test-compile-first</id>
            <phase>process-test-resources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
          <!-- <execution> -->
          <!--   <id>attach&#45;scaladocs</id> -->
          <!--   <phase>verify</phase> -->
          <!--   <goals> -->
          <!--     <goal>doc&#45;jar</goal> -->
          <!--   </goals> -->
          <!-- </execution> -->
        </executions>
        <configuration>
          <scalaVersion>${scala.version}</scalaVersion>
          <recompileMode>incremental</recompileMode>
          <useZincServer>true</useZincServer>
          <args>
            <!-- <arg>&#45;unchecked</arg> -->
            <!-- <arg>&#45;deprecation</arg> -->
            <!-- <arg>&#45;feature</arg> -->
            <arg>-g:vars</arg>
          </args>
          <jvmArgs>
            <jvmArg>-Xms1024m</jvmArg>
            <jvmArg>-Xmx3g</jvmArg>
            <jvmArg>-XX:PermSize=${PermGen}</jvmArg>
            <jvmArg>-XX:MaxPermSize=${MaxPermGen}</jvmArg>
          </jvmArgs>
          <javacArgs>
            <javacArg>-source</javacArg>
            <javacArg>${java.version}</javacArg>
            <javacArg>-target</javacArg>
            <javacArg>${java.version}</javacArg>
          </javacArgs>
          <!-- The following plugin is required to use quasiquotes in Scala 2.10 and is used
                 by Spark SQL for code generation. -->
            <!-- <compilerPlugins> -->
              <!--   <compilerPlugin> -->
                <!--       <groupId>org.scalamacros</groupId> -->
                <!--       <artifactId>paradise_${scala.version}</artifactId> -->
                <!--       <version>${scala.macros.version}</version> -->
                <!--   </compilerPlugin> -->
              <!-- </compilerPlugins> -->
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.1</version>
          <configuration>
            <source>${java.version}</source>
            <target>${java.version}</target>
            <encoding>UTF-8</encoding>
            <maxmem>1024m</maxmem>
            <fork>true</fork>
          </configuration>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-jar-plugin</artifactId>
          <version>2.4</version>
        </plugin>
    </plugins>
  </build>
</project>
